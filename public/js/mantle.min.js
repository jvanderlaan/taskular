!function(t) {
    "function" == typeof define && define.amd ? define("datepicker", [ "jquery" ], t) : t("object" == typeof exports ? require("jquery") : jQuery);
}(function(Y) {
    "use strict";
    function h(t) {
        return "string" == typeof t;
    }
    function n(t) {
        return "number" == typeof t && !isNaN(t);
    }
    function r(t) {
        return void 0 === t;
    }
    function d(t) {
        return "date" === (e = t, s.call(e).slice(8, -1).toLowerCase());
        var e;
    }
    function a(t, e) {
        var i = [];
        return Array.from ? Array.from(t).slice(e || 0) : (n(e) && i.push(e), i.slice.apply(t, i));
    }
    function t(t, e) {
        var i = a(arguments, 2);
        return function() {
            return t.apply(e, i.concat(a(arguments)));
        };
    }
    function A(t, e) {
        return [ 31, (i = t, i % 4 == 0 && i % 100 != 0 || i % 400 == 0 ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ][e];
        var i;
    }
    function l(t, e) {
        (e = Y.isPlainObject(e) ? e : {}).language && (e = Y.extend({}, l.LANGUAGES[e.language], e)), 
        this.$element = Y(t), this.options = Y.extend({}, l.DEFAULTS, e), this.isBuilt = !1, 
        this.isShown = !1, this.isInput = !1, this.isInline = !1, this.initialValue = "", 
        this.initialDate = null, this.startDate = null, this.endDate = null, this.init();
    }
    var e = Y(window), o = window.document, p = Y(o), c = window.Number, u = "datepicker", i = "click.datepicker", g = /(y|m|d)+/g, f = /\d+/g, m = /^\d{2,4}$/, v = [ "datepicker-top-left", "datepicker-top-right", "datepicker-bottom-left", "datepicker-bottom-right" ].join(" "), w = "datepicker-hide", $ = 0, y = 1, k = 2, D = Math.min, s = Object.prototype.toString;
    l.prototype = {
        constructor: l,
        init: function() {
            var t = this.options, e = this.$element, i = t.startDate, a = t.endDate, s = t.date;
            this.$trigger = Y(t.trigger), this.isInput = e.is("input") || e.is("textarea"), 
            this.isInline = t.inline && (t.container || !this.isInput), this.format = function(t) {
                var e, i, a = String(t).toLowerCase(), s = a.match(g);
                if (!s || 0 === s.length) throw new Error("Invalid date format.");
                for (t = {
                    source: a,
                    parts: s
                }, e = s.length, i = 0; i < e; i++) switch (s[i]) {
                  case "dd":
                  case "d":
                    t.hasDay = !0;
                    break;

                  case "mm":
                  case "m":
                    t.hasMonth = !0;
                    break;

                  case "yyyy":
                  case "yy":
                    t.hasYear = !0;
                }
                return t;
            }(t.format), this.oldValue = this.initialValue = this.getValue(), s = this.parseDate(s || this.initialValue), 
            i && (i = this.parseDate(i), s.getTime() < i.getTime() && (s = new Date(i)), this.startDate = i), 
            a && (a = this.parseDate(a), i && a.getTime() < i.getTime() && (a = new Date(i)), 
            s.getTime() > a.getTime() && (s = new Date(a)), this.endDate = a), this.date = s, 
            this.viewDate = new Date(s), this.initialDate = new Date(this.date), this.bind(), 
            (t.autoShow || this.isInline) && this.show(), t.autoPick && this.pick();
        },
        build: function() {
            var t, e = this.options, i = this.$element;
            this.isBuilt || (this.isBuilt = !0, this.$picker = t = Y(e.template), this.$week = t.find('[data-view="week"]'), 
            this.$yearsPicker = t.find('[data-view="years picker"]'), this.$yearsPrev = t.find('[data-view="years prev"]'), 
            this.$yearsNext = t.find('[data-view="years next"]'), this.$yearsCurrent = t.find('[data-view="years current"]'), 
            this.$years = t.find('[data-view="years"]'), this.$monthsPicker = t.find('[data-view="months picker"]'), 
            this.$yearPrev = t.find('[data-view="year prev"]'), this.$yearNext = t.find('[data-view="year next"]'), 
            this.$yearCurrent = t.find('[data-view="year current"]'), this.$months = t.find('[data-view="months"]'), 
            this.$daysPicker = t.find('[data-view="days picker"]'), this.$monthPrev = t.find('[data-view="month prev"]'), 
            this.$monthNext = t.find('[data-view="month next"]'), this.$monthCurrent = t.find('[data-view="month current"]'), 
            this.$days = t.find('[data-view="days"]'), this.isInline ? Y(e.container || i).append(t.addClass("datepicker-inline")) : (Y(o.body).append(t.addClass("datepicker-dropdown")), 
            t.addClass(w)), this.fillWeek());
        },
        unbuild: function() {
            this.isBuilt && (this.isBuilt = !1, this.$picker.remove());
        },
        bind: function() {
            var t = this.options, e = this.$element;
            Y.isFunction(t.show) && e.on("show.datepicker", t.show), Y.isFunction(t.hide) && e.on("hide.datepicker", t.hide), 
            Y.isFunction(t.pick) && e.on("pick.datepicker", t.pick), this.isInput && e.on("keyup.datepicker", Y.proxy(this.keyup, this)), 
            this.isInline || (t.trigger ? this.$trigger.on(i, Y.proxy(this.toggle, this)) : this.isInput ? e.on("focus.datepicker", Y.proxy(this.show, this)) : e.on(i, Y.proxy(this.show, this)));
        },
        unbind: function() {
            var t = this.options, e = this.$element;
            Y.isFunction(t.show) && e.off("show.datepicker", t.show), Y.isFunction(t.hide) && e.off("hide.datepicker", t.hide), 
            Y.isFunction(t.pick) && e.off("pick.datepicker", t.pick), this.isInput && e.off("keyup.datepicker", this.keyup), 
            this.isInline || (t.trigger ? this.$trigger.off(i, this.toggle) : this.isInput ? e.off("focus.datepicker", this.show) : e.off(i, this.show));
        },
        showView: function(t) {
            var e = this.$yearsPicker, i = this.$monthsPicker, a = this.$daysPicker, s = this.format;
            if (s.hasYear || s.hasMonth || s.hasDay) switch (c(t)) {
              case k:
              case "years":
                i.addClass(w), a.addClass(w), s.hasYear ? (this.fillYears(), e.removeClass(w), this.place()) : this.showView($);
                break;

              case y:
              case "months":
                e.addClass(w), a.addClass(w), s.hasMonth ? (this.fillMonths(), i.removeClass(w), 
                this.place()) : this.showView(k);
                break;

              default:
                e.addClass(w), i.addClass(w), s.hasDay ? (this.fillDays(), a.removeClass(w), this.place()) : this.showView(y);
            }
        },
        hideView: function() {
            !this.isInline && this.options.autoHide && this.hide();
        },
        place: function() {
            if (!this.isInline) {
                var t = this.options, e = this.$element, i = this.$picker, a = p.outerWidth(), s = p.outerHeight(), n = e.outerWidth(), o = e.outerHeight(), r = i.width(), l = i.height(), h = e.offset(), d = h.left, c = h.top, u = parseFloat(t.offset) || 10, g = "datepicker-top-left";
                l < c && s < c + o + l ? (c -= l + u, g = "datepicker-bottom-left") : c += o + u, 
                a < d + r && (d = d + n - r, g = g.replace("left", "right")), i.removeClass(v).addClass(g).css({
                    top: c,
                    left: d,
                    zIndex: parseInt(t.zIndex, 10)
                });
            }
        },
        trigger: function(t, e) {
            var i = Y.Event(t, e);
            return this.$element.trigger(i), i;
        },
        createItem: function(t) {
            var e = this.options, i = e.itemTag, a = {
                text: "",
                view: "",
                muted: !1,
                picked: !1,
                disabled: !1,
                highlighted: !1
            }, s = [];
            return Y.extend(a, t), a.muted && s.push(e.mutedClass), a.highlighted && s.push(e.highlightedClass), 
            a.picked && s.push(e.pickedClass), a.disabled && s.push(e.disabledClass), "<" + i + ' class="' + s.join(" ") + '"' + (a.view ? ' data-view="' + a.view + '"' : "") + ">" + a.text + "</" + i + ">";
        },
        fillAll: function() {
            this.fillYears(), this.fillMonths(), this.fillDays();
        },
        fillWeek: function() {
            var t, e = this.options, i = parseInt(e.weekStart, 10) % 7, a = e.daysMin, s = "";
            for (a = Y.merge(a.slice(i), a.slice(0, i)), t = 0; t <= 6; t++) s += this.createItem({
                text: a[t]
            });
            this.$week.html(s);
        },
        fillYears: function() {
            var t, e = this.options, i = e.disabledClass || "", a = e.yearSuffix || "", s = Y.isFunction(e.filter) && e.filter, n = this.startDate, o = this.endDate, r = this.viewDate, l = r.getFullYear(), h = r.getMonth(), d = r.getDate(), c = new Date().getFullYear(), u = this.date, g = u.getFullYear(), p = !1, f = !1, m = !1, v = !1, w = !1, $ = "";
            for (t = -5; t <= 6; t++) u = new Date(l + t, h, d), w = -5 === t || 6 === t, v = l + t === g, 
            m = !1, n && (m = u.getFullYear() < n.getFullYear(), -5 === t && (p = m)), !m && o && (m = u.getFullYear() > o.getFullYear(), 
            6 === t && (f = m)), !m && s && (m = !1 === s.call(this.$element, u)), $ += this.createItem({
                text: l + t,
                view: m ? "year disabled" : v ? "year picked" : "year",
                muted: w,
                picked: v,
                disabled: m,
                highlighted: u.getFullYear() === c
            });
            this.$yearsPrev.toggleClass(i, p), this.$yearsNext.toggleClass(i, f), this.$yearsCurrent.toggleClass(i, !0).html(l + -5 + a + " - " + (l + 6) + a), 
            this.$years.html($);
        },
        fillMonths: function() {
            var t, e = this.options, i = e.disabledClass || "", a = e.monthsShort, s = Y.isFunction(e.filter) && e.filter, n = this.startDate, o = this.endDate, r = this.viewDate, l = r.getFullYear(), h = r.getDate(), d = new Date(), c = d.getFullYear(), u = d.getMonth(), g = this.date, p = g.getFullYear(), f = g.getMonth(), m = !1, v = !1, w = !1, $ = !1, y = "";
            for (t = 0; t <= 11; t++) g = new Date(l, t, h), $ = l === p && t === f, w = !1, 
            n && (w = (m = g.getFullYear() === n.getFullYear()) && g.getMonth() < n.getMonth()), 
            !w && o && (w = (v = g.getFullYear() === o.getFullYear()) && g.getMonth() > o.getMonth()), 
            !w && s && (w = !1 === s.call(this.$element, g)), y += this.createItem({
                index: t,
                text: a[t],
                view: w ? "month disabled" : $ ? "month picked" : "month",
                picked: $,
                disabled: w,
                highlighted: l === c && g.getMonth() === u
            });
            this.$yearPrev.toggleClass(i, m), this.$yearNext.toggleClass(i, v), this.$yearCurrent.toggleClass(i, m && v).html(l + e.yearSuffix || ""), 
            this.$months.html(y);
        },
        fillDays: function() {
            var t, e, i, a = this.options, s = a.disabledClass || "", n = a.yearSuffix || "", o = a.monthsShort, r = parseInt(a.weekStart, 10) % 7, l = Y.isFunction(a.filter) && a.filter, h = this.startDate, d = this.endDate, c = this.viewDate, u = c.getFullYear(), g = c.getMonth(), p = u, f = g, m = u, v = new Date(), w = v.getFullYear(), $ = v.getMonth(), y = v.getDate(), k = g, D = this.date, C = D.getFullYear(), b = D.getMonth(), x = D.getDate(), S = !1, T = !1, F = !1, I = !1, M = [], V = [], P = [];
            for (0 === g ? (p -= 1, f = 11) : f -= 1, t = A(p, f), (i = (D = new Date(u, g, 1)).getDay() - r) <= 0 && (i += 7), 
            h && (S = D.getTime() <= h.getTime()), e = t - (i - 1); e <= t; e++) D = new Date(p, f, e), 
            I = p === C && f === b && e === x, F = !1, h && (F = D.getTime() < h.getTime()), 
            !F && l && (F = !1 === l.call(this.$element, D)), M.push(this.createItem({
                text: e,
                view: "day prev",
                muted: !0,
                picked: I,
                disabled: F,
                highlighted: p === w && f === $ && D.getDate() === y
            }));
            for (11 === g ? (m += 1, k = 0) : k += 1, t = A(u, g), i = 42 - (M.length + t), 
            D = new Date(u, g, t), d && (T = D.getTime() >= d.getTime()), e = 1; e <= i; e++) D = new Date(m, k, e), 
            I = m === C && k === b && e === x, F = !1, d && (F = D.getTime() > d.getTime()), 
            !F && l && (F = !1 === l.call(this.$element, D)), V.push(this.createItem({
                text: e,
                view: "day next",
                muted: !0,
                picked: I,
                disabled: F,
                highlighted: m === w && k === $ && D.getDate() === y
            }));
            for (e = 1; e <= t; e++) D = new Date(u, g, e), I = u === C && g === b && e === x, 
            F = !1, h && (F = D.getTime() < h.getTime()), !F && d && (F = D.getTime() > d.getTime()), 
            !F && l && (F = !1 === l.call(this.$element, D)), P.push(this.createItem({
                text: e,
                view: F ? "day disabled" : I ? "day picked" : "day",
                picked: I,
                disabled: F,
                highlighted: u === w && g === $ && D.getDate() === y
            }));
            this.$monthPrev.toggleClass(s, S), this.$monthNext.toggleClass(s, T), this.$monthCurrent.toggleClass(s, S && T).html(a.yearFirst ? u + n + " " + o[g] : o[g] + " " + u + n), 
            this.$days.html(M.join("") + P.join(" ") + V.join(""));
        },
        click: function(t) {
            var e, i, a, s, n, o, r = Y(t.target), l = this.options, h = this.viewDate;
            if (t.stopPropagation(), t.preventDefault(), !r.hasClass("disabled")) switch (e = h.getFullYear(), 
            i = h.getMonth(), a = h.getDate(), o = r.data("view")) {
              case "years prev":
              case "years next":
                e = "years prev" === o ? e - 10 : e + 10, n = r.text(), (s = m.test(n)) && (e = parseInt(n, 10), 
                this.date = new Date(e, i, D(a, 28))), this.viewDate = new Date(e, i, D(a, 28)), 
                this.fillYears(), s && (this.showView(y), this.pick("year"));
                break;

              case "year prev":
              case "year next":
                e = "year prev" === o ? e - 1 : e + 1, this.viewDate = new Date(e, i, D(a, 28)), 
                this.fillMonths();
                break;

              case "year current":
                this.format.hasYear && this.showView(k);
                break;

              case "year picked":
                this.format.hasMonth ? this.showView(y) : (r.addClass(l.pickedClass).siblings().removeClass(l.pickedClass), 
                this.hideView()), this.pick("year");
                break;

              case "year":
                e = parseInt(r.text(), 10), this.date = new Date(e, i, D(a, 28)), this.format.hasMonth ? (this.viewDate = new Date(e, i, D(a, 28)), 
                this.showView(y)) : (r.addClass(l.pickedClass).siblings().removeClass(l.pickedClass), 
                this.hideView()), this.pick("year");
                break;

              case "month prev":
              case "month next":
                i = "month prev" === o ? i - 1 : "month next" === o ? i + 1 : i, this.viewDate = new Date(e, i, D(a, 28)), 
                this.fillDays();
                break;

              case "month current":
                this.format.hasMonth && this.showView(y);
                break;

              case "month picked":
                this.format.hasDay ? this.showView($) : (r.addClass(l.pickedClass).siblings().removeClass(l.pickedClass), 
                this.hideView()), this.pick("month");
                break;

              case "month":
                i = Y.inArray(r.text(), l.monthsShort), this.date = new Date(e, i, D(a, 28)), this.format.hasDay ? (this.viewDate = new Date(e, i, D(a, 28)), 
                this.showView($)) : (r.addClass(l.pickedClass).siblings().removeClass(l.pickedClass), 
                this.hideView()), this.pick("month");
                break;

              case "day prev":
              case "day next":
              case "day":
                i = "day prev" === o ? i - 1 : "day next" === o ? i + 1 : i, a = parseInt(r.text(), 10), 
                this.date = new Date(e, i, a), this.viewDate = new Date(e, i, a), this.fillDays(), 
                "day" === o && this.hideView(), this.pick("day");
                break;

              case "day picked":
                this.hideView(), this.pick("day");
            }
        },
        clickDoc: function(t) {
            for (var e, i = t.target, a = this.$element[0], s = this.$trigger[0]; i !== o; ) {
                if (i === s || i === a) {
                    e = !0;
                    break;
                }
                i = i.parentNode;
            }
            e || this.hide();
        },
        keyup: function() {
            this.update();
        },
        keyupDoc: function(t) {
            this.isInput && t.target !== this.$element[0] && this.isShown && ("Tab" === t.key || 9 === t.keyCode) && this.hide();
        },
        getValue: function() {
            var t = this.$element, e = "";
            return this.isInput ? e = t.val() : this.isInline ? this.options.container && (e = t.text()) : e = t.text(), 
            e;
        },
        setValue: function(t) {
            var e = this.$element;
            t = h(t) ? t : "", this.isInput ? e.val(t) : this.isInline ? this.options.container && e.text(t) : e.text(t);
        },
        show: function() {
            this.isBuilt || this.build(), this.isShown || this.trigger("show.datepicker").isDefaultPrevented() || (this.isShown = !0, 
            this.$picker.removeClass(w).on(i, Y.proxy(this.click, this)), this.showView(this.options.startView), 
            this.isInline || (e.on("resize.datepicker", this._place = t(this.place, this)), 
            p.on(i, this._clickDoc = t(this.clickDoc, this)), p.on("keyup.datepicker", this._keyupDoc = t(this.keyupDoc, this)), 
            this.place()));
        },
        hide: function() {
            this.isShown && (this.trigger("hide.datepicker").isDefaultPrevented() || (this.isShown = !1, 
            this.$picker.addClass(w).off(i, this.click), this.isInline || (e.off("resize.datepicker", this._place), 
            p.off(i, this._clickDoc), p.off("keyup.datepicker", this._keyupDoc))));
        },
        toggle: function() {
            this.isShown ? this.hide() : this.show();
        },
        update: function() {
            var t = this.getValue();
            t !== this.oldValue && (this.setDate(t, !0), this.oldValue = t);
        },
        pick: function(t) {
            var e = this.$element, i = this.date;
            this.trigger("pick.datepicker", {
                view: t || "",
                date: i
            }).isDefaultPrevented() || (this.setValue(i = this.formatDate(this.date)), this.isInput && e.trigger("change"));
        },
        reset: function() {
            this.setDate(this.initialDate, !0), this.setValue(this.initialValue), this.isShown && this.showView(this.options.startView);
        },
        getMonthName: function(t, e) {
            var i = this.options, a = i.months;
            return Y.isNumeric(t) ? t = c(t) : r(e) && (e = t), !0 === e && (a = i.monthsShort), 
            a[n(t) ? t : this.date.getMonth()];
        },
        getDayName: function(t, e, i) {
            var a = this.options, s = a.days;
            return Y.isNumeric(t) ? t = c(t) : (r(i) && (i = e), r(e) && (e = t)), (s = !0 === i ? a.daysMin : !0 === e ? a.daysShort : s)[n(t) ? t : this.date.getDay()];
        },
        getDate: function(t) {
            var e = this.date;
            return t ? this.formatDate(e) : new Date(e);
        },
        setDate: function(t, e) {
            var i = this.options.filter;
            if (d(t) || h(t)) {
                if (t = this.parseDate(t), Y.isFunction(i) && !1 === i.call(this.$element, t)) return;
                this.date = t, this.viewDate = new Date(t), e || this.pick(), this.isBuilt && this.fillAll();
            }
        },
        setStartDate: function(t) {
            (d(t) || h(t)) && (this.startDate = this.parseDate(t), this.isBuilt && this.fillAll());
        },
        setEndDate: function(t) {
            (d(t) || h(t)) && (this.endDate = this.parseDate(t), this.isBuilt && this.fillAll());
        },
        parseDate: function(t) {
            var e, i, a, s, n, o, r = this.format, l = [];
            if (d(t)) return new Date(t.getFullYear(), t.getMonth(), t.getDate());
            if (h(t) && (l = t.match(f) || []), i = (t = new Date()).getFullYear(), a = t.getDate(), 
            s = t.getMonth(), e = r.parts.length, l.length === e) for (o = 0; o < e; o++) switch (n = parseInt(l[o], 10) || 1, 
            r.parts[o]) {
              case "dd":
              case "d":
                a = n;
                break;

              case "mm":
              case "m":
                s = n - 1;
                break;

              case "yy":
                i = 2e3 + n;
                break;

              case "yyyy":
                i = n;
            }
            return new Date(i, s, a);
        },
        formatDate: function(t) {
            var e, i, a, s, n, o = this.format, r = "";
            if (d(t)) for (r = o.source, i = t.getFullYear(), (s = {
                d: t.getDate(),
                m: t.getMonth() + 1,
                yy: i.toString().substring(2),
                yyyy: i
            }).dd = (s.d < 10 ? "0" : "") + s.d, s.mm = (s.m < 10 ? "0" : "") + s.m, e = o.parts.length, 
            n = 0; n < e; n++) a = o.parts[n], r = r.replace(a, s[a]);
            return r;
        },
        destroy: function() {
            this.unbind(), this.unbuild(), this.$element.removeData(u);
        }
    }, l.LANGUAGES = {}, l.DEFAULTS = {
        autoShow: !1,
        autoHide: !1,
        autoPick: !1,
        inline: !1,
        container: null,
        trigger: null,
        language: "",
        format: "mm/dd/yyyy",
        date: null,
        startDate: null,
        endDate: null,
        startView: 0,
        weekStart: 0,
        yearFirst: !1,
        yearSuffix: "",
        days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
        daysShort: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
        daysMin: [ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ],
        months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
        monthsShort: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ],
        itemTag: "li",
        mutedClass: "muted",
        pickedClass: "picked",
        disabledClass: "disabled",
        highlightedClass: "highlighted",
        template: '<div class="datepicker-container"><div class="datepicker-panel" data-view="years picker"><ul><li data-view="years prev">&lsaquo;</li><li data-view="years current"></li><li data-view="years next">&rsaquo;</li></ul><ul data-view="years"></ul></div><div class="datepicker-panel" data-view="months picker"><ul><li data-view="year prev">&lsaquo;</li><li data-view="year current"></li><li data-view="year next">&rsaquo;</li></ul><ul data-view="months"></ul></div><div class="datepicker-panel" data-view="days picker"><ul><li data-view="month prev">&lsaquo;</li><li data-view="month current"></li><li data-view="month next">&rsaquo;</li></ul><ul data-view="week"></ul><ul data-view="days"></ul></div></div>',
        offset: 10,
        zIndex: 1e3,
        filter: null,
        show: null,
        hide: null,
        pick: null
    }, l.setDefaults = function(t) {
        (t = Y.isPlainObject(t) ? t : {}).language && (t = Y.extend({}, l.LANGUAGES[t.language], t)), 
        Y.extend(l.DEFAULTS, t);
    }, l.other = Y.fn.datepicker, Y.fn.datepicker = function(s) {
        var n, o = a(arguments, 1);
        return this.each(function() {
            var t, e, i = Y(this), a = i.data(u);
            if (!a) {
                if (/destroy/.test(s)) return;
                t = Y.extend({}, i.data(), Y.isPlainObject(s) && s), i.data(u, a = new l(this, t));
            }
            h(s) && Y.isFunction(e = a[s]) && (n = e.apply(a, o));
        }), r(n) ? this : n;
    }, Y.fn.datepicker.Constructor = l, Y.fn.datepicker.languages = l.LANGUAGES, Y.fn.datepicker.setDefaults = l.setDefaults, 
    Y.fn.datepicker.noConflict = function() {
        return Y.fn.datepicker = l.other, this;
    };
});

var dropdowns = function() {
    "use strict";
    function t(t) {
        0 == s ? ($("#" + $(this).data("id")).toggleClass("toggled"), s = !0, t.stopPropagation()) : 1 == s && ($("#" + $(this).data("id")).toggleClass("toggled"), 
        s = !1, t.stopPropagation());
    }
    function e() {
        0 != s && ($(".dropdown-content.toggled").toggleClass("toggled"), s = !1);
    }
    function i(t) {
        t.stopPropagation();
    }
    var a = {}, s = !1;
    return {
        init: function() {
            a.$document = $(document), a.$dropdownToggle = $(".dropdown-toggle"), a.$dropdownContent = $(".dropdown-content"), 
            a.$dropdownToggle.click(t), a.$document.on("click", e), a.$dropdownContent.on("click", i);
        }
    };
}(), modals = function() {
    "use strict";
    function t(t) {
        $(".modal$modal");
        s.$modalToToggle.toggleClass("toggled"), s.$body.height() > $(window).height() && (s.$body.toggleClass("modal-active"), 
        s.$nav.toggleClass("modal-active")), n = !0, t.stopPropagation();
    }
    function e(t) {
        s.$modal.toggleClass("toggled"), s.$body.height() > $(window).height() && (s.$body.toggleClass("modal-active"), 
        s.$nav.toggleClass("modal-active")), n = !1, t.stopPropagation();
    }
    function i() {
        0 != n && (s.$modal.toggleClass("toggled"), s.$body.height() > $(window).height() && (s.$body.toggleClass("modal-active"), 
        s.$nav.toggleClass("modal-active")), n = !1);
    }
    function a(t) {
        t.stopPropagation();
    }
    var s = {}, n = !1;
    return {
        init: function() {
            s.$modal = $(".modal").attr("id"), s.$modalToggle = $(".modal-toggle").attr("id"), 
            s.$modalClose = $(".modal-close"), s.$modalBackground = $(".modal-background"), 
            s.$modalContent = $(".modal-content"), s.$body = $("body"), s.$nav = $(".nav"), 
            s.$modalToggle.click(t), s.$modalClose.click(e), s.$modalBackground.on("click", i), 
            s.$modalContent.on("click", a);
        }
    };
}(), navDetachable = function() {
    "use strict";
    function t(t) {
        t.preventDefault();
        var e = $(this).attr("href").slice(1), i = $('.section[id="' + e + '"]').offset().top;
        return $("html, body").animate({
            scrollTop: i
        }, 600), !1;
    }
    function e() {
        var e = $(this).scrollTop();
        500 <= e ? (a.$navAside.addClass("detached"), a.$section.each(function(t) {
            $(this).position().top <= e - 500 && ($(".scroll-anchor.active").removeClass("active"), 
            $(".scroll-anchor").eq(t).addClass("active"));
        })) : a.$navAside.removeClass("detached");
    }
    function i() {
        500 < a.$document.scrollTop() ? a.$navAside.addClass("detached") : $(".scroll-anchor:first").addClass("active");
    }
    var a = {};
    return {
        init: function() {
            a.$document = $(document), a.$window = $(window), a.$scrollAnchor = $(".scroll-anchor"), 
            a.$navAside = $(".nav-aside"), a.$section = $(".section"), a.$scrollAnchor.click(t), 
            a.$window.scroll(e), a.$document.ready(i);
        }
    };
}(), navSide = function() {
    "use strict";
    function t(t) {
        0 == s ? (a.$navSide.toggleClass("toggled"), s = !0, t.stopPropagation()) : 1 == s && (a.$navSide.toggleClass("toggled"), 
        s = !1, t.stopPropagation());
    }
    function e() {
        0 != s && (a.$navSide.toggleClass("toggled"), s = !1);
    }
    function i(t) {
        t.stopPropagation();
    }
    var a = {}, s = !1;
    return {
        init: function() {
            a.$document = $(document), a.$navToggle = $(".nav-toggle"), a.$navSide = $(".nav-side"), 
            a.$navToggle.click(t), a.$document.on("click", e), a.$navSide.on("click", i);
        }
    };
}(), navTop = function() {
    "use strict";
    function t(t) {
        0 == s ? (a.$nav.toggleClass("toggled"), s = !0, t.stopPropagation()) : 1 == s && (a.$nav.toggleClass("toggled"), 
        s = !1, t.stopPropagation());
    }
    function e() {
        0 != s && (a.$nav.toggleClass("toggled"), s = !1);
    }
    function i(t) {
        t.stopPropagation();
    }
    var a = {}, s = !1;
    return {
        init: function() {
            a.$document = $(document), a.$navToggle = $(".nav-toggle"), a.$nav = $(".nav"), 
            a.$navToggle.click(t), a.$document.on("click", e), a.$nav.on("click", i);
        }
    };
}(), notifications = function() {
    "use strict";
    function t(t) {
        t.preventDefault(), $(this).parent().hide();
    }
    var e = {};
    return {
        init: function() {
            e.$dismissNotification = $(".dismiss-notification"), e.$dismissNotification.click(t);
        }
    };
}(), slider = function() {
    "use strict";
    function t() {
        var t = i.$sliderOuter.scrollLeft();
        i.$sliderOuter.animate({
            scrollLeft: t - 400
        }, 400);
    }
    function e() {
        var t = i.$sliderOuter.scrollLeft();
        i.$sliderOuter.animate({
            scrollLeft: t + 400
        }, 400);
    }
    var i = {};
    return {
        init: function() {
            i.$sliderChevronLeft = $(".slider-chevron.left"), i.$sliderChevronRight = $(".slider-chevron.right"), 
            i.$sliderOuter = $(".slider-outer"), i.$sliderChevronLeft.click(t), i.$sliderChevronRight.click(e);
        }
    };
}(), tabs = function() {
    "use strict";
    function t(t) {
        t.preventDefault();
        var e = $(this).children("a").attr("href");
        1 != $(this).hasClass("tab-active") && (i.$tab.removeClass("tab-active"), i.$tabContent.removeClass("tab-active").css("opacity", "0"), 
        $(this).addClass("tab-active"), $(e).addClass("tab-active").animate({
            opacity: 1
        }, 600, "linear"));
    }
    var i = {};
    return {
        init: function() {
            i.$tab = $(".tab"), i.$tabContent = $(".tab-content"), i.$tab.click(t);
        }
    };
}(), wysiwyg = function() {
    "use strict";
    function t() {
        CKEDITOR.replace("wysiwyg"), CKEDITOR.config.codeSnippet_theme = "monokai_sublime";
    }
    var e = {};
    return {
        init: function() {
            e.$document = $(document), e.$document.ready(t);
        }
    };
}();

$(document).ready(function() {
    wysiwyg.init(), dropdowns.init(), modals.init(), navDetachable.init(), navSide.init(), 
    navTop.init(), notifications.init(), slider.init(), tabs.init();
});